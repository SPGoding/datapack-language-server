{
    "name": "datapack-language-server",
    "version": "1.13.7",
    "main": "dist/client.js",
    "bin": {
        "datapack-language-server": "./dist/server.js"
    },
    "author": "SPGoding",
    "publisher": "SPGoding",
    "license": "MIT",
    "directories": {
        "test": "src/test/"
    },
    "scripts": {
        "build": "webpack",
        "build:dev": "webpack --mode=\"development\"",
        "build:profile": "webpack --profile --json > dist/stats.json",
        "codecov": "codecov -f coverage/*.json",
        "commit": "gitmoji -c",
        "contributors:add": "all-contributors add",
        "contributors:generate": "all-contributors generate",
        "lint": "eslint --fix src/**/*.ts",
        "lint:dry": "eslint --fix-dry-run src/**/*.ts",
        "postinstall": "vscode-install",
        "release": "semantic-release",
        "release:dry": "semantic-release --dry-run",
        "test": "nyc mocha --require espower-typescript/guess --require source-map-support/register --timeout 10000 src/test/**/*.ts",
        "posttest": "nyc report --reporter=json",
        "watch": "webpack --watch --mode=\"development\""
    },
    "dependencies": {
        "clone": "^2.1.2",
        "fs-extra": "^9.0.0",
        "python-range": "^1.0.4",
        "vscode-languageclient": "^6.1.0",
        "vscode-languageserver": "^6.1.0",
        "vscode-uri": "^2.1.1"
    },
    "devDependencies": {
        "@istanbuljs/nyc-config-typescript": "^1.0.0",
        "@semantic-release/changelog": "^5.0.0",
        "@semantic-release/git": "^8.0.0",
        "@types/clone": "^0.1.30",
        "@types/fs-extra": "^8.0.1",
        "@types/mocha": "^7.0.0",
        "@types/node": "^13.0.0",
        "@types/power-assert": "^1.5.2",
        "@types/webpack": "^4.41.2",
        "@typescript-eslint/eslint-plugin": "^2.20.0",
        "@typescript-eslint/parser": "^2.20.0",
        "all-contributors-cli": "^6.11.2",
        "codecov": "^3.6.1",
        "eslint": "^6.8.0",
        "espower-typescript": "^9.0.2",
        "gitmoji-cli": "^3.0.0",
        "mocha": "^7.0.0",
        "nyc": "^15.0.0",
        "power-assert": "^1.5.0",
        "semantic-release": "^16.0.4",
        "semantic-release-gitmoji": "^1.3.0",
        "semantic-release-vsce": "^3.0.1",
        "source-map-support": "^0.5.16",
        "ts-loader": "^6.2.1",
        "ts-node": "^8.5.4",
        "typescript": "^3.7.4",
        "vscode": "^1.1.36",
        "webpack": "^4.41.5",
        "webpack-cli": "^3.3.10"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/SPGoding/datapack-language-server.git"
    },
    "homepage": "https://github.com/SPGoding/datapack-language-server",
    "bugs": {
        "url": "https://github.com/SPGoding/datapack-language-server/issues"
    },
    "engines": {
        "vscode": "^1.41.0"
    },
    "displayName": "%datapack.displayName%",
    "description": "%datapack.description%",
    "icon": "icon.png",
    "categories": [
        "Formatters",
        "Linters",
        "Programming Languages"
    ],
    "keywords": [
        "multi-root ready",
        "minecraft",
        "datapack",
        "mcfunction"
    ],
    "contributes": {
        "languages": [
            {
                "id": "mcfunction",
                "extensions": [
                    "mcfunction"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "commands": [
            {
                "command": "datapack.regenerateCache",
                "title": "%datapack.commands.regenerateCache.title%",
                "category": "Datapack",
                "enablement": "workspaceFolderCount != 0 && editorLangId == mcfunction"
            }
        ],
        "configuration": {
            "title": "Datapack Language Server",
            "properties": {
                "datapack.env.permissionLevel": {
                    "type": "number",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "markdownDescription": "%datapack.config.env.permissionLevel%",
                    "default": 2
                },
                "datapack.env.dependsOnVanilla": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.env.dependsOnVanilla%",
                    "default": true
                },
                "datapack.env.version": {
                    "type": "string",
                    "enum": [
                        "1.15",
                        "1.16"
                    ],
                    "markdownDescription": "%datapack.config.env.version%",
                    "default": "1.16"
                },
                "datapack.env.dataVersion": {
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "Latest release",
                                "Latest snapshot"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "markdownDescription": "%datapack.config.env.dataVersion%",
                    "default": "Latest snapshot"
                },
                "datapack.features.colors": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.features.colors%",
                    "default": true
                },
                "datapack.features.completions": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.features.completions%",
                    "default": true
                },
                "datapack.features.documentHighlighting": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.features.documentHighlighting%",
                    "default": true
                },
                "datapack.features.documentLinks": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.features.documentLinks%",
                    "default": true
                },
                "datapack.features.foldingRanges": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.features.foldingRanges%",
                    "default": true
                },
                "datapack.features.formatting": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.features.formatting%",
                    "default": true
                },
                "datapack.features.semanticColoring": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.features.semanticColoring%",
                    "default": true
                },
                "datapack.features.selectionRanges": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.features.selectionRanges%",
                    "default": true
                },
                "datapack.features.signatures": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.features.signatures%",
                    "default": true
                },
                "datapack.snippets": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "markdownDescription": "%datapack.config.snippets%",
                    "default": {
                        "executeIfScoreSet": "execute if score ${1:score_holder} ${2:objective} = ${1:score_holder} ${2:objective} $0",
                        "scoreboardPlayersOperation": "scoreboard players operation ${1:target_score_holder} ${2:target_objective} ${3|+=,-=,*=,/=,%=,=,>,<,<>|} ${4:source_score_holder} ${5:source_objective}",
                        "scoreboardPlayersSet": "scoreboard players operation ${1:score_holder} ${2:objective} ${3:0}",
                        "tagAdd": "tag ${1:target} add ${2:tag}",
                        "tagRemove": "tag ${1:target} remove ${2:tag}",
                        "dataModifyStorageFromSelf": "data modify storage ${1:id} ${2:path} set from entity @s ${3:path}",
                        "summonAec": "summon minecraft:area_effect_cloud ~ ~ ~ {Age: -2147483648, Duration: -1, WaitTime: -2147483648, Tags: [\"${1:tag}\"]}"
                    }
                },
                "datapack.lint.enableFormatting": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.enableFormatting%",
                    "default": false
                },
                "datapack.lint.blockStateAppendSpaceAfterComma": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.blockStateAppendSpaceAfterComma%",
                    "default": false
                },
                "datapack.lint.blockStatePutSpacesAroundEqualSign": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.blockStatePutSpacesAroundEqualSign%",
                    "default": false
                },
                "datapack.lint.blockStateSortKeys": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.blockStateSortKeys%",
                    "default": false
                },
                "datapack.lint.entitySelectorAppendSpaceAfterComma": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.entitySelectorAppendSpaceAfterComma%",
                    "default": false
                },
                "datapack.lint.entitySelectorPutSpacesAroundEqualSign": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.entitySelectorPutSpacesAroundEqualSign%",
                    "default": false
                },
                "datapack.lint.entitySelectorKeyOrder": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "sort",
                            "limit",
                            "type",
                            "gamemode",
                            "gamemodeNeg",
                            "level",
                            "team",
                            "teamNeg",
                            "typeNeg",
                            "tag",
                            "tagNeg",
                            "name",
                            "nameNeg",
                            "predicate",
                            "predicateNeg",
                            "scores",
                            "advancements",
                            "nbt",
                            "nbtNeg",
                            "x",
                            "y",
                            "z",
                            "dx",
                            "dy",
                            "dz",
                            "distance",
                            "x_rotation",
                            "y_rotation"
                        ]
                    },
                    "uniqueItems": true,
                    "markdownDescription": "%datapack.config.lint.entitySelectorKeyOrder%",
                    "default": [
                        "sort",
                        "limit",
                        "type",
                        "gamemode",
                        "gamemodeNeg",
                        "level",
                        "team",
                        "teamNeg",
                        "typeNeg",
                        "tag",
                        "tagNeg",
                        "name",
                        "nameNeg",
                        "predicate",
                        "predicateNeg",
                        "scores",
                        "advancements",
                        "nbt",
                        "nbtNeg",
                        "x",
                        "y",
                        "z",
                        "dx",
                        "dy",
                        "dz",
                        "distance",
                        "x_rotation",
                        "y_rotation"
                    ]
                },
                "datapack.lint.quoteType": {
                    "type": "string",
                    "enum": [
                        "always single",
                        "always double",
                        "prefer single",
                        "prefer double"
                    ],
                    "markdownDescription": "%datapack.config.lint.quoteType%",
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.quoteType.0%",
                        "%datapack.config.lint.quoteType.1%",
                        "%datapack.config.lint.quoteType.2%",
                        "%datapack.config.lint.quoteType.3%"
                    ],
                    "default": "prefer double"
                },
                "datapack.lint.quoteEntitySelectorKeys": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "markdownDescription": "%datapack.config.lint.quoteEntitySelectorKeys%",
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.quoteEntitySelectorKeys.0%",
                        "%datapack.config.lint.quoteEntitySelectorKeys.1%"
                    ],
                    "default": false
                },
                "datapack.lint.quoteSnbtStringKeys": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "markdownDescription": "%datapack.config.lint.quoteSnbtStringKeys%",
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.quoteSnbtStringKeys.0%",
                        "%datapack.config.lint.quoteSnbtStringKeys.1%"
                    ],
                    "default": false
                },
                "datapack.lint.quoteNbtStringValues": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ],
                    "markdownDescription": "%datapack.config.lint.quoteNbtStringValues%",
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.quoteNbtStringValues.0%",
                        "%datapack.config.lint.quoteNbtStringValues.1%"
                    ],
                    "default": true
                },
                "datapack.lint.snbtAppendSpaceAfterColon": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.snbtAppendSpaceAfterColon%",
                    "default": true
                },
                "datapack.lint.snbtAppendSpaceAfterComma": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.snbtAppendSpaceAfterComma%",
                    "default": true
                },
                "datapack.lint.snbtAppendSpaceAfterSemicolon": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.snbtAppendSpaceAfterSemicolon%",
                    "default": true
                },
                "datapack.lint.snbtByteSuffix": {
                    "type": "string",
                    "enum": [
                        "b",
                        "B"
                    ],
                    "markdownDescription": "%datapack.config.lint.snbtByteSuffix%",
                    "default": "b"
                },
                "datapack.lint.snbtUseBooleans": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.snbtUseBooleans%",
                    "default": false
                },
                "datapack.lint.snbtShortSuffix": {
                    "type": "string",
                    "enum": [
                        "s",
                        "S"
                    ],
                    "markdownDescription": "%datapack.config.lint.snbtShortSuffix%",
                    "default": "s"
                },
                "datapack.lint.snbtLongSuffix": {
                    "type": "string",
                    "enum": [
                        "l",
                        "L"
                    ],
                    "markdownDescription": "%datapack.config.lint.snbtLongSuffix%",
                    "default": "L"
                },
                "datapack.lint.snbtFloatSuffix": {
                    "type": "string",
                    "enum": [
                        "f",
                        "F"
                    ],
                    "markdownDescription": "%datapack.config.lint.snbtFloatSuffix%",
                    "default": "f"
                },
                "datapack.lint.snbtDoubleSuffix": {
                    "type": "string",
                    "enum": [
                        "d",
                        "D"
                    ],
                    "markdownDescription": "%datapack.config.lint.snbtDoubleSuffix%",
                    "default": "d"
                },
                "datapack.lint.snbtOmitDoubleSuffix": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.snbtOmitDoubleSuffix%",
                    "default": false
                },
                "datapack.lint.snbtKeepDecimalPlace": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.snbtKeepDecimalPlace%",
                    "default": true
                },
                "datapack.lint.snbtSortKeys": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.snbtSortKeys%",
                    "default": false
                },
                "datapack.lint.timeOmitTickUnit": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.timeOmitTickUnit%",
                    "default": false
                },
                "datapack.lint.nameOfObjectives": {
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": [
                                "camelCase",
                                "PascalCase",
                                "snake_case",
                                "SCREAMING_SNAKE_CASE",
                                "kebab-case",
                                "whatever"
                            ]
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "camelCase",
                                    "PascalCase",
                                    "snake_case",
                                    "SCREAMING_SNAKE_CASE",
                                    "kebab-case",
                                    "whatever"
                                ]
                            }
                        }
                    ],
                    "markdownDescription": "%datapack.config.lint.nameOfObjectives%",
                    "default": "whatever"
                },
                "datapack.lint.nameOfSnbtCompoundTagKeys": {
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": [
                                "camelCase",
                                "PascalCase",
                                "snake_case",
                                "SCREAMING_SNAKE_CASE",
                                "kebab-case",
                                "whatever"
                            ]
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "camelCase",
                                    "PascalCase",
                                    "snake_case",
                                    "SCREAMING_SNAKE_CASE",
                                    "kebab-case",
                                    "whatever"
                                ]
                            }
                        }
                    ],
                    "markdownDescription": "%datapack.config.lint.nameOfSnbtCompoundTagKeys%",
                    "default": "whatever"
                },
                "datapack.lint.nameOfTags": {
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": [
                                "camelCase",
                                "PascalCase",
                                "snake_case",
                                "SCREAMING_SNAKE_CASE",
                                "kebab-case",
                                "whatever"
                            ]
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "camelCase",
                                    "PascalCase",
                                    "snake_case",
                                    "SCREAMING_SNAKE_CASE",
                                    "kebab-case",
                                    "whatever"
                                ]
                            }
                        }
                    ],
                    "markdownDescription": "%datapack.config.lint.nameOfTags%",
                    "default": "whatever"
                },
                "datapack.lint.nameOfTeams": {
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": [
                                "camelCase",
                                "PascalCase",
                                "snake_case",
                                "SCREAMING_SNAKE_CASE",
                                "kebab-case",
                                "whatever"
                            ]
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "camelCase",
                                    "PascalCase",
                                    "snake_case",
                                    "SCREAMING_SNAKE_CASE",
                                    "kebab-case",
                                    "whatever"
                                ]
                            }
                        }
                    ],
                    "markdownDescription": "%datapack.config.lint.nameOfTeams%",
                    "default": "whatever"
                },
                "datapack.lint.strictBossbarCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictBossbarCheck%",
                    "default": false
                },
                "datapack.lint.strictStorageCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictStorageCheck%",
                    "default": false
                },
                "datapack.lint.strictObjectiveCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictObjectiveCheck%",
                    "default": false
                },
                "datapack.lint.strictTagCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictTagCheck%",
                    "default": false
                },
                "datapack.lint.strictTeamCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictTeamCheck%",
                    "default": false
                },
                "datapack.lint.strictAdvancementCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictAdvancementCheck%",
                    "default": false
                },
                "datapack.lint.strictFunctionCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictFunctionCheck%",
                    "default": false
                },
                "datapack.lint.strictLootTableCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictLootTableCheck%",
                    "default": false
                },
                "datapack.lint.strictPredicateCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictPredicateCheck%",
                    "default": false
                },
                "datapack.lint.strictRecipeCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictRecipeCheck%",
                    "default": false
                },
                "datapack.lint.strictBlockTagCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictBlockTagCheck%",
                    "default": false
                },
                "datapack.lint.strictEntityTypeTagCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictEntityTypeTagCheck%",
                    "default": false
                },
                "datapack.lint.strictFluidTagCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictFluidTagCheck%",
                    "default": false
                },
                "datapack.lint.strictFunctionTagCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictFunctionTagCheck%",
                    "default": false
                },
                "datapack.lint.strictItemTagCheck": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.strictItemTagCheck%",
                    "default": false
                },
                "datapack.lint.strictMobEffectCheck": {
                    "type": "string",
                    "enum": [
                        "always",
                        "only-default-namespace",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.strictCheckOption.0%",
                        "%datapack.config.lint.strictCheckOption.1%",
                        "%datapack.config.lint.strictCheckOption.2%"
                    ],
                    "markdownDescription": "%datapack.config.lint.strictMobEffectCheck%",
                    "default": "only-default-namespace"
                },
                "datapack.lint.strictEnchantmentCheck": {
                    "type": "string",
                    "enum": [
                        "always",
                        "only-default-namespace",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.strictCheckOption.0%",
                        "%datapack.config.lint.strictCheckOption.1%",
                        "%datapack.config.lint.strictCheckOption.2%"
                    ],
                    "markdownDescription": "%datapack.config.lint.strictEnchantmentCheck%",
                    "default": "only-default-namespace"
                },
                "datapack.lint.strictSoundEventCheck": {
                    "type": "string",
                    "enum": [
                        "always",
                        "only-default-namespace",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.strictCheckOption.0%",
                        "%datapack.config.lint.strictCheckOption.1%",
                        "%datapack.config.lint.strictCheckOption.2%"
                    ],
                    "markdownDescription": "%datapack.config.lint.strictSoundEventCheck%",
                    "default": "only-default-namespace"
                },
                "datapack.lint.strictEntityTypeCheck": {
                    "type": "string",
                    "enum": [
                        "always",
                        "only-default-namespace",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.strictCheckOption.0%",
                        "%datapack.config.lint.strictCheckOption.1%",
                        "%datapack.config.lint.strictCheckOption.2%"
                    ],
                    "markdownDescription": "%datapack.config.lint.strictEntityTypeCheck%",
                    "default": "only-default-namespace"
                },
                "datapack.lint.strictDimensionTypeCheck": {
                    "type": "string",
                    "enum": [
                        "always",
                        "only-default-namespace",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.strictCheckOption.0%",
                        "%datapack.config.lint.strictCheckOption.1%",
                        "%datapack.config.lint.strictCheckOption.2%"
                    ],
                    "markdownDescription": "%datapack.config.lint.strictDimensionTypeCheck%",
                    "default": "only-default-namespace"
                },
                "datapack.lint.strictBlockCheck": {
                    "type": "string",
                    "enum": [
                        "always",
                        "only-default-namespace",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.strictCheckOption.0%",
                        "%datapack.config.lint.strictCheckOption.1%",
                        "%datapack.config.lint.strictCheckOption.2%"
                    ],
                    "markdownDescription": "%datapack.config.lint.strictBlockCheck%",
                    "default": "only-default-namespace"
                },
                "datapack.lint.strictItemCheck": {
                    "type": "string",
                    "enum": [
                        "always",
                        "only-default-namespace",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.strictCheckOption.0%",
                        "%datapack.config.lint.strictCheckOption.1%",
                        "%datapack.config.lint.strictCheckOption.2%"
                    ],
                    "markdownDescription": "%datapack.config.lint.strictItemCheck%",
                    "default": "only-default-namespace"
                },
                "datapack.lint.strictPotionCheck": {
                    "type": "string",
                    "enum": [
                        "always",
                        "only-default-namespace",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.strictCheckOption.0%",
                        "%datapack.config.lint.strictCheckOption.1%",
                        "%datapack.config.lint.strictCheckOption.2%"
                    ],
                    "markdownDescription": "%datapack.config.lint.strictPotionCheck%",
                    "default": "only-default-namespace"
                },
                "datapack.lint.strictMotiveCheck": {
                    "type": "string",
                    "enum": [
                        "always",
                        "only-default-namespace",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.strictCheckOption.0%",
                        "%datapack.config.lint.strictCheckOption.1%",
                        "%datapack.config.lint.strictCheckOption.2%"
                    ],
                    "markdownDescription": "%datapack.config.lint.strictMotiveCheck%",
                    "default": "only-default-namespace"
                },
                "datapack.lint.strictFluidCheck": {
                    "type": "string",
                    "enum": [
                        "always",
                        "only-default-namespace",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.strictCheckOption.0%",
                        "%datapack.config.lint.strictCheckOption.1%",
                        "%datapack.config.lint.strictCheckOption.2%"
                    ],
                    "markdownDescription": "%datapack.config.lint.strictFluidCheck%",
                    "default": "only-default-namespace"
                },
                "datapack.lint.strictParticleTypeCheck": {
                    "type": "string",
                    "enum": [
                        "always",
                        "only-default-namespace",
                        "never"
                    ],
                    "markdownEnumDescriptions": [
                        "%datapack.config.lint.strictCheckOption.0%",
                        "%datapack.config.lint.strictCheckOption.1%",
                        "%datapack.config.lint.strictCheckOption.2%"
                    ],
                    "markdownDescription": "%datapack.config.lint.strictParticleTypeCheck%",
                    "default": "only-default-namespace"
                },
                "datapack.lint.omitDefaultNamespace": {
                    "type": "boolean",
                    "markdownDescription": "%datapack.config.lint.omitDefaultNamespace%",
                    "default": false
                }
            }
        },
        "semanticTokenTypes": [
            {
                "id": "annotation",
                "description": "An annotation in doc comments"
            },
            {
                "id": "boolean",
                "description": "A real boolean value"
            },
            {
                "id": "entity",
                "description": "An entity or a score holder"
            },
            {
                "id": "literal",
                "description": "A literal argument"
            },
            {
                "id": "namespacedID",
                "description": "A namespaced ID"
            },
            {
                "id": "vector",
                "description": "A vector"
            }
        ],
        "semanticTokenModifiers": [
            {
                "id": "firstArgument",
                "description": "The first argument in a command"
            }
        ],
        "semanticTokenStyleDefaults": [
            {
                "selector": "annotation",
                "scope": [
                    "support.type.doc.annotation.mcfunction"
                ]
            },
            {
                "selector": "boolean",
                "scope": [
                    "constant.language.boolean.mcfunction"
                ]
            },
            {
                "selector": "entity",
                "scope": [
                    "support.class.entity.mcfunction"
                ]
            },
            {
                "selector": "literal",
                "scope": [
                    "keyword.other.mcfunction"
                ]
            },
            {
                "selector": "literal.firstArgument",
                "scope": [
                    "keyword.control.mcfunction"
                ]
            },
            {
                "selector": "namespacedID",
                "scope": [
                    "entity.name.function.mcfunction"
                ]
            },
            {
                "selector": "vector",
                "scope": [
                    "constant.numeric.vector.mcfunction"
                ]
            }
        ]
    },
    "activationEvents": [
        "onLanguage:mcfunction",
        "onLanguage:mcfunction-snapshot"
    ]
}
